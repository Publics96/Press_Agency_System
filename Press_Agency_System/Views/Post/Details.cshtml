@model Press_Agency_System.Models.PostDetailsViewModel
@using Microsoft.AspNet.Identity
@using Press_Agency_System.Models
@{
    ViewBag.Title = "Details";
    //  Layout = "~/Views/Shared/_WallLayout.cshtml";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css" />
<script src="~/Scripts/bootstrap.js"></script>
@*<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css"
    integrity="sha512-+4zCK9k+qNFUR5X+cKL9EIR+ZOhtIloNl9GIKS57V1MyNsYpYcUrUeQc9vNfzsWfV28IaLL3i96P9sdNyeRssA=="
    crossorigin="anonymous" />*@



<style>
    .blog {
        background: #f9f9f9;
    }

    .blog-item {
        padding: 0px -10px;
        outline: 1px solid #DCDCDC;
        margin: 10px 0px;
        padding-left: 0px;
        padding-right: 0px;
    }

    .blog-content {
    }

    .blog-img {
        position: relative;
        overflow: hidden;
        width: 100%;
    }

        .blog-img img {
            height: 450px;
            width: 100%;
        }

        .blog-img::after {
            position: absolute;
            content: "";
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.2);
        }

        .blog-img img {
            transition: all 0.5s ease;
        }

        .blog-img:hover img {
            transform: scale(1.1);
        }

        .blog-img .span_views {
            position: absolute;
            top: 15px;
            right: 15px;
            color: #fff;
            font-size: 15px;
            padding: 4px 13px;
            border-radius: 12%;
            z-index: 3;
            background-color: rgba(0,0,0,0.65);
        }

        .blog-img .blog-category {
            position: absolute;
            bottom: 20px;
            left: 20px;
            padding: 4px 5px;
            z-index: 3;
            font-size: 16px;
            background-color: #dc3545;
        }

        .blog-img .save-blog {
            position: absolute;
            top: 15px;
            left: 15px;
            font-size: 26px;
            z-index: 3;
        }

    .save-blog #btn-save-blog {
        transition: all ease 0.5s;
    }

        .save-blog #btn-save-blog.active {
            color: #dc3545;
        }

        .save-blog #btn-save-blog:hover {
            color: #dc3545;
            transform: scale(1.1);
        }

        .save-blog #btn-save-blog.active:hover {
            color: black;
            transform: scale(1.1);
        }

    .blog .blog-interaction {
        height: 40px;
        display: flex;
        padding: 10px;
        justify-content: space-between;
        margin-bottom: 30px;
    }

        .blog .blog-interaction .editor-img {
            border-radius: 50%;
            height: 40px;
            width: 40px;
        }

        .blog .blog-interaction .editor-data {
            display: flex;
            font-family: ui-monospace;
        }

        .blog .blog-interaction .editor-name {
            font-size: 21px;
            font-weight: bold;
            padding: 5px;
            font-family: ui-monospace;
        }

    .blog .reactions {
        font-size: 21px;
        padding: 0px;
    }

        .blog .reactions span {
            padding: 2px;
        }

    .blog-text {
        margin: 5px 0px;
        padding: 15px 10px 30px;
    }

        .blog-text span {
            font-weight: 300;
            display: block;
            padding-bottom: 0.5rem;
        }

        .blog-text h2 {
            font-family: "Gill Sans", sans-serif;
            padding: 5px 0px 15px 0px;
            font-size: 25px;
            font-weight: bold;
        }

        .blog-text p {
            font-weight: 300;
            opacity: 0.9;
            padding-bottom: 1.2rem;
        }

        .blog-text .blog-body {
            font-size: 20px;
        }

    .text-date {
        padding: 10px;
        margin: 30px 5px;
        font-size: 16px;
    }

    .blog-text a {
        font-size: 1.1rem;
        text-decoration: none;
        display: inline-block;
        color: #fff;
        padding: 0.55rem 1.2rem;
        transition: all 0.5s ease;
    }

    .reactions #likebtn, .reactions #dislikebtn {
        transition: all 0.5s ease;
    }

        .reactions #likebtn.active, .reactions #dislikebtn.active {
            color: #dc3545;
        }

        .reactions #likebtn:hover, .reactions #dislikebtn:hover {
            transform: scale(1.3);
            color: #dc3545;
        }

        .reactions #likebtn.active:hover, .reactions #dislikebtn.active:hover {
            transform: scale(1.3);
            color: black;
        }
</style>


<section class="blog">
    <div class="container">
        <div class="row">
            <div class="col-md-12 blog-item card">

                <div class="blog-img">
                    <img src="~/Content/Posts Images/@Html.DisplayFor(model=>model.Post.ImagePath)" alt="">
                    <span class="span_views"><i class="fas fa-eye" style="margin-right:5px;"></i><span id="numberofviews">@Model.allInteractions.Count</span> </span>
                    <span class="badge blog-category">
                        @Model.Post.PostType
                </span>
                <span class="save-blog"><i id="btn-save-blog" class="fas fa-bookmark"></i></span>
            </div>
            <div class="blog-interaction">
                <div class="editor-data">
                    <img class="editor-img" src="~/Content/Persons Images/@Html.DisplayFor(model=>model.Post.User.PhotoPath)" width="20px" height="20px" />
                    <p class="editor-name">@Model.Post.User.FirstName @Model.Post.User.LastName</p>
                </div>
                <div class="reactions">
                    <i id="likebtn" class="fas fa-thumbs-up"></i>
                    <span class="numberofreactions" id="numberoflikes">@Model.allInteractions.Where(x => x.Like == 1).Count()</span>
                    <i id="dislikebtn" class="fas fa-thumbs-down"></i>
                    <span class="numberofreactions" id="numberofdislikes">@Model.allInteractions.Where(x => x.Like == 2).Count()</span>

                </div>
            </div>
            <span class="text-date"><i class="fas fa-clock"></i>  @Model.Post.PostDate.ToString("dd MMMM yyyy HH:mm")</span>
            <div class="blog-text">
                <h2>@Model.Post.PostTitle</h2>

                <div class="blog-body">
                    <p>
                        @Html.Raw(HttpUtility.HtmlDecode(Html.DisplayFor(model => model.Post.PostBody).ToString()))

                    </p>
                </div>

            </div>
        </div>
    </div>
</div>
</section>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Post.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
@User.Identity.GetUserId()
@section Scripts{
    <script>



        let dislike = document.getElementById('dislikebtn');
        let like = document.getElementById('likebtn');
        let numberoflikes = document.getElementById('numberoflikes');
        let numberofdislikes = document.getElementById('numberofdislikes');
        let btn_save_post = document.getElementById('btn-save-blog');


        if ("@Model.likedbyuser" == 1) {
            like.classList.add('active');
        } else if ("@Model.likedbyuser" == 2) {
            dislike.classList.add('active');
        }
    
        if ("@Model.saveedbyuser" == 'True') {
            
            btn_save_post.classList.add('active');
        } else {
            btn_save_post.classList.remove('active');
        }

        // Viewing The Post
        $(document).ready(function () {
            var numberofviews = document.getElementById("numberofviews");
            $.ajax({
                type: "Post",
                url: "/Post/ViewPost/" + String(@Model.Post.Id),
                success: function (response) {

                    numberofviews.innerHTML = parseInt(numberofviews.innerHTML) + parseInt(response);
                }
            })

        });


        // Adding Like To Post
        like.addEventListener("click", function () {
            $.ajax({
                type: "GET",
                url: "/Post/Like/" + String(@Model.Post.Id),
                success: function (response) {

                    if (dislike.classList.contains('active')) {
                        dislike.classList.remove('active');
                        numberofdislikes.innerHTML = parseInt(numberofdislikes.innerHTML) - 1;
                    }
                    if (like.classList.contains('active')) {
                        like.classList.remove('active');
                        numberoflikes.innerHTML = parseInt(numberoflikes.innerHTML) - 1;
                    } else {
                        numberoflikes.innerHTML = parseInt(numberoflikes.innerHTML) + 1;
                        like.classList.add('active');
                    }

                }
            })
        });

        // Adding Dislike To The Post
        dislike.addEventListener("click", function () {
            $.ajax({
                type: "GET",
                url: "/Post/disLike/" + String(@Model.Post.Id),
                success: function (response) {
                    if (like.classList.contains('active')) {
                        like.classList.remove('active');
                        numberoflikes.innerHTML = parseInt(numberoflikes.innerHTML) - 1;
                    }

                    if (dislike.classList.contains('active')) {
                        dislike.classList.remove('active');
                        numberofdislikes.innerHTML = parseInt(numberofdislikes.innerHTML) - 1;
                    } else {
                        dislike.classList.add('active');
                        numberofdislikes.innerHTML = parseInt(numberofdislikes.innerHTML) + 1;
                    }
                }
            })
        });

        // Saving The Post
        btn_save_post.addEventListener('click', function () {
            $.ajax({
                type: 'get',
                url: '/Post/Save/' + String(@Model.Post.Id),
                success: function (response) {
                    if (response == "Saved") {
                        btn_save_post.classList.add('active');
                    } else {
                        btn_save_post.classList.remove('active');
                    }
                }
            })
        })
        @*var xhr = new XMLHttpRequest();
            xhr.open('GET', 'http://localhost:2053/Post/Like/' + String(@Model.Post.Id), true);
            xhr.onchange = function () {
                if (status == 200) {
                    alert('doneeeeeeeee');
                    document.getElementById('numberoflikes').innerHTML = @Model.allInteractions.Where(x => x.Like ==1).Count() +1
                    console.log(xhr.responseText);
                }
            }
            xhr.send();*@

    </script>
}